name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Install dependencies
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

  # Run tests with JUnit output
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:run -- --reporter=junit --reporter=default --outputFile=junit.xml
      
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: 'junit.xml'
          check_name: 'Test Results'
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: junit.xml
          retention-days: 30

  # Generate test coverage
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate coverage
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/cobertura-coverage.xml
          flags: unittests
          name: codecov-umbrella
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  # Type checking
  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run type-check

  # Build library
  build:
    name: Build Library
    runs-on: ubuntu-latest
    needs: [test, coverage, type-check]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  # Build Storybook
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Storybook
        run: npm run build:storybook
      
      - name: Upload Storybook
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/
          retention-days: 30

  # Generate TypeDoc documentation
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate TypeDoc
        run: npm run docs
      
      - name: Copy unified documentation
        run: cp plans/DOCUMENTATION.md docs/DOCUMENTATION.md
      
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/
          retention-days: 30

  # Deploy to GitHub Pages
  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build, build-storybook, build-docs, coverage]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      
      - name: Download Storybook
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: storybook-static
      
      - name: Download documentation
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: docs
      
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage
      
      - name: Prepare deployment
        run: |
          mkdir -p public
          cp -r storybook-static public/storybook
          cp -r docs public/docs
          cp -r coverage public/coverage
          cp -r dist public/dist
          
          # Create dist/index.html for directory listing
          cat > public/dist/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Preact Components System - Build Artifacts</title>
            <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                line-height: 1.6;
                color: #333;
                background: #f8f9fa;
                padding: 20px;
              }
              .container {
                max-width: 800px;
                margin: 0 auto;
                background: white;
                border-radius: 8px;
                padding: 30px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
              }
              h1 {
                color: #667eea;
                margin-bottom: 10px;
                font-size: 2rem;
              }
              .description {
                color: #666;
                margin-bottom: 30px;
              }
              .files {
                list-style: none;
                padding: 0;
              }
              .file-item {
                padding: 15px;
                border: 1px solid #e0e0e0;
                border-radius: 6px;
                margin-bottom: 10px;
                display: flex;
                justify-content: space-between;
                align-items: center;
              }
              .file-link {
                color: #667eea;
                text-decoration: none;
                font-weight: 500;
                font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
              }
              .file-link:hover {
                text-decoration: underline;
              }
              .file-size {
                color: #666;
                font-size: 0.9rem;
                background: #f8f9fa;
                padding: 4px 8px;
                border-radius: 4px;
              }
              .back-link {
                display: inline-block;
                margin-bottom: 20px;
                color: #667eea;
                text-decoration: none;
                font-weight: 500;
              }
              .back-link:hover {
                text-decoration: underline;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <a href="../" class="back-link">‚Üê Back to Home</a>
              <h1>üì¶ Build Artifacts</h1>
              <p class="description">Production library build files for the Preact Components System.</p>
              
              <ul class="files">
                <li class="file-item">
                  <a href="./index.js" class="file-link">index.js</a>
                  <span class="file-size">ES Module</span>
                </li>
                <li class="file-item">
                  <a href="./index.umd.cjs" class="file-link">index.umd.cjs</a>
                  <span class="file-size">UMD Bundle</span>
                </li>
                <li class="file-item">
                  <a href="./index.css" class="file-link">index.css</a>
                  <span class="file-size">Styles</span>
                </li>
                <li class="file-item">
                  <a href="./index.js.map" class="file-link">index.js.map</a>
                  <span class="file-size">Source Map</span>
                </li>
                <li class="file-item">
                  <a href="./index.umd.cjs.map" class="file-link">index.umd.cjs.map</a>
                  <span class="file-size">UMD Source Map</span>
                </li>
              </ul>

              <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e0e0e0; text-align: center; color: #666;">
                <p>
                  <strong>Installation:</strong><br>
                  <code>npm install preact-components-system</code>
                </p>
              </div>
            </div>
          </body>
          </html>
          EOF
          
          # Create index.html
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Preact Components System</title>
            <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                line-height: 1.6;
                color: #333;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 20px;
              }
              .container {
                max-width: 800px;
                background: white;
                border-radius: 12px;
                padding: 40px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
              }
              h1 {
                color: #667eea;
                margin-bottom: 10px;
                font-size: 2.5rem;
              }
              .version {
                color: #666;
                margin-bottom: 30px;
                font-size: 0.9rem;
              }
              .links {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 20px;
                margin-top: 30px;
              }
              .link-card {
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                text-decoration: none;
                border-radius: 8px;
                transition: transform 0.2s, box-shadow 0.2s;
                display: block;
              }
              .link-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
              }
              .link-card h3 {
                margin-bottom: 8px;
                font-size: 1.2rem;
              }
              .link-card p {
                font-size: 0.9rem;
                opacity: 0.9;
              }
              .stats {
                display: flex;
                gap: 20px;
                margin: 30px 0;
                flex-wrap: wrap;
              }
              .stat {
                flex: 1;
                min-width: 150px;
                padding: 15px;
                background: #f8f9fa;
                border-radius: 8px;
                text-align: center;
              }
              .stat-value {
                font-size: 1.5rem;
                font-weight: bold;
                color: #667eea;
              }
              .stat-label {
                font-size: 0.85rem;
                color: #666;
                margin-top: 5px;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>üé® Preact Components System</h1>
              <p class="version">Version 1.0.1 ‚Ä¢ Build: ${{ github.sha }}</p>
              
              <div class="stats">
                <div class="stat">
                  <div class="stat-value">43 kB</div>
                  <div class="stat-label">Bundle Size</div>
                </div>
                <div class="stat">
                  <div class="stat-value">77/77</div>
                  <div class="stat-label">Tests Passing</div>
                </div>
                <div class="stat">
                  <div class="stat-value">TypeScript</div>
                  <div class="stat-label">Full Type Safety</div>
                </div>
              </div>

              <div class="links">
                <a href="./storybook/" class="link-card">
                  <h3>üìö Storybook</h3>
                  <p>Interactive component documentation and examples</p>
                </a>
                
                <a href="./docs/" class="link-card">
                  <h3>üìñ API Docs</h3>
                  <p>Complete TypeDoc API reference</p>
                </a>
                
                <a href="./coverage/" class="link-card">
                  <h3>üß™ Coverage</h3>
                  <p>Test coverage reports and metrics</p>
                </a>
                
                <a href="./demo/" class="link-card">
                  <h3>üöÄ Demo App</h3>
                  <p>Interactive demo application showcasing all components</p>
                </a>
              </div>

              <div style="margin-top: 40px; padding-top: 30px; border-top: 1px solid #e0e0e0; text-align: center; color: #666;">
                <p>
                  <a href="https://github.com/prachwal/preact-components-system" style="color: #667eea; text-decoration: none;">
                    GitHub Repository
                  </a>
                  ‚Ä¢
                  <a href="./docs/DOCUMENTATION.html" style="color: #667eea; text-decoration: none;">
                    Full Documentation
                  </a>
                </p>
              </div>
            </div>
          </body>
          </html>
          EOF
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Publish to npm (manual trigger on releases)
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
