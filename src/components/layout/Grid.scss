.grid {
  box-sizing: border-box;
}

.grid-container {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  
  // Use CSS custom property for columns, default to 12
  --grid-columns: 12;
}

.grid-item {
  box-sizing: border-box;
  margin: 0;
}

// Direction
.grid-direction-row-reverse {
  flex-direction: row-reverse;
}

.grid-direction-column {
  flex-direction: column;
}

.grid-direction-column-reverse {
  flex-direction: column-reverse;
}

// Wrap
.grid-wrap-nowrap {
  flex-wrap: nowrap;
}

.grid-wrap-wrap-reverse {
  flex-wrap: wrap-reverse;
}

// Align items
.grid-align-flex-start {
  align-items: flex-start;
}

.grid-align-center {
  align-items: center;
}

.grid-align-flex-end {
  align-items: flex-end;
}

.grid-align-stretch {
  align-items: stretch;
}

.grid-align-baseline {
  align-items: baseline;
}

// Justify content
.grid-justify-flex-start {
  justify-content: flex-start;
}

.grid-justify-center {
  justify-content: center;
}

.grid-justify-flex-end {
  justify-content: flex-end;
}

.grid-justify-space-between {
  justify-content: space-between;
}

.grid-justify-space-around {
  justify-content: space-around;
}

.grid-justify-space-evenly {
  justify-content: space-evenly;
}

// Spacing (using margin-based approach)
@for $i from 0 through 10 {
  .grid-spacing-#{$i} {
    width: calc(100% + #{$i * 8}px);
    margin: -#{$i * 4}px;
    
    > .grid-item {
      padding: #{$i * 4}px;
    }
  }
}

// Grid item sizes
// Generate for each breakpoint
@mixin grid-item-sizes($breakpoint: '') {
  $prefix: if($breakpoint != '', 'grid-#{$breakpoint}-', 'grid-xs-');
  
  // Auto sizing
  .#{$prefix}auto {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }
  
  // True (equal width)
  .#{$prefix}true {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }
  
  // Specific sizes (1-12)
  @for $i from 1 through 12 {
    .#{$prefix}#{$i} {
      flex-grow: 0;
      flex-basis: calc(100% / var(--grid-columns) * #{$i});
      max-width: calc(100% / var(--grid-columns) * #{$i});
    }
  }
}

// Generate for xs (mobile first, no media query)
@include grid-item-sizes('xs');

// sm breakpoint (600px)
@media (min-width: 600px) {
  @include grid-item-sizes('sm');
}

// md breakpoint (900px)
@media (min-width: 900px) {
  @include grid-item-sizes('md');
}

// lg breakpoint (1200px)
@media (min-width: 1200px) {
  @include grid-item-sizes('lg');
}

// xl breakpoint (1536px)
@media (min-width: 1536px) {
  @include grid-item-sizes('xl');
}
